[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "image-periscope"
version = "0.4.0"
description = "A web application to display images from a specified directory while maintaining the directory structure."
authors = ["kakibara <moritarizumu@gmail.com>"]
readme = "README.md"
packages = [{include = "image_periscope"}]

[tool.poetry.dependencies]
python = ">=3.12"
flask = "2.2.2"
jinja2 = "3.1.2"
werkzeug = "2.2.2"
pillow = ">=9.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "7.1.2"
ruff = "^0.12.11"
mypy = "^1.17.1"


[tool.poetry.scripts]
image-periscope = "image_periscope.cli:main"


[tool.ruff]
line-length = 120
target-version = "py312"
# 以下は外部のソースコードのため format/lint しない。
# 詳細は src/unstructured/parser/layout_analyzer/__init__.py を参照。
exclude = ["src/unstructured/parser/layout_analyzer/ditod/"]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "UP",  # pyupgrade
  "D",   # flake8-docstrings
  "N",   # pep8-naming
  "PTH", # flake8-use-pathlib
  "RET", # flake8-return
  "Q",   # flake8-quotes
  "TID", # flake8-tidy-imports
  # "ALL", # all of the above
]
fixable = ["ALL"]
ignore = ["D415", "D417", "E501", "PTH123"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
combine-as-imports = true
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]
split-on-trailing-comma = true

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
  # Allow Pydantic's `@validator` decorator to trigger class method treatment.
  "pydantic.validator",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "ANN201", "N802", "ARG", "D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
disallow_incomplete_defs = false
warn_return_any = false
warn_unused_ignores = true
no_implicit_optional = false
strict_optional = false
ignore_errors = false
warn_unreachable = true